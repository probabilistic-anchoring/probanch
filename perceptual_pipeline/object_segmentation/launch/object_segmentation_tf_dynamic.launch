<launch>
  <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
    <arg name="calib_path" value="$(find kinect2_bridge)/data/" />
    <arg name="publish_tf" value="true" />
    <arg name="depth_method" value="cuda" />
    <arg name="reg_method" value="default" />
    <arg name="edge_aware_filter" value="true" />
  </include>

  <!--  Dynamic transform publisher -->
	<include file="$(find ar_transform)/launch/ar_transform.launch" />
  <node name="table_tf" pkg="ar_transform" type="transformer.py" cwd="node" output="screen" />

  <!-- Run object segmentation (recognition) node -->
  <node name="object_segmentation_node" pkg="object_segmentation" type="object_segmentation" output="screen">
    <remap to="/kinect2/qhd/image_color_rect" from="/image"/>
    <remap to="/kinect2/qhd/camera_info" from="/camera_info"/>
    <remap to="/kinect2/qhd/points" from="/cloud"/>

    <param name="compare_type" type="int" value="1" />
    <param name="plane_min_size" type="int" value="2000" />
    <param name="cluster_min_size" type="int" value="250" />
    <param name="angular_th" type="double" value="1.0" />
    <param name="distance_th" type="double" value="0.016" />
    <param name="refine_factor" type="double" value="0.89" />

    <!-- Spatial thresholds (used for filter the point cloud) -->
    <param name="min_x" type="double" value="0.05" />
    <param name="max_x" type="double" value="0.6" />
    <param name="min_y" type="double" value="-0.8" />
    <param name="max_y" type="double" value="-0.05" />
    <param name="min_z" type="double" value="-0.1" />
    <param name="max_z" type="double" value="0.8" />

  </node>


  <!-- Tracking node -->
  <node name="hand_tracking_node" pkg="hand_tracking" type="tracker.py" output="screen" >
    <param name="display" type="bool" value="true" />
  </node>

</launch>
